# Shows meta-info about the rules - typical documentation and what order they should show up in the documentation
# Each rule should match a corresponding snakemake rule
# These will be read into a dictionary and populated with results

# Minidocs for some of the fields (more to come laters)
#
# * Rule        : The rulename in the snakemake file.
# * Rule order  : Sort alphabetically by this to get the documentation/execution order.
#                 There is no guarantee that they rules are run in that order, but
#                 this is the normal order they should be documented in
# * Timetamp    : When the results of this rule was logged (UTC aka GMT)
# * rule type   : Either sample or marker
# * rule action : Wht the rule does to the date. Either remove or update
#
# Some items are not shown here at all, but will be inserted as results of the QC
# * in          : Number of markers/sample before rule
# * out         : Number of markers/sample after rule
# * actionTakenCount: Number of markers/samples affected by the rul


remove_chr0:
  QC test: Remove chromosone 0
  Description:
  Rule order: mod1-a
  rule type: markers
  rule action: remove
  # Placeholders that the pipeline will fill in
  Rule: Will be the same as the key of this entry
  Timestamp:

remove_duplicate_markers:
  QC test: Remove duplicate markers
  Description: When duplicate markers are found, only the one with best call rating is kept
  Rule order: mod1-b
  rule type: markers
  rule action: remove
  # Placeholders that the pipeline will fill in
  Rule: Will be the same as the key of this entry
  Timestamp: 

update_sample_ids:
  QC test: Update sample ids
  Description: Mapping lab ids to sentrix ids
  Rule order: mod1-c
  rule type: samples
  rule action: update
  # Placeholders that the pipeline will fill in
  Rule: Will be the same as the key of this entry
  Timestamp: 

update_parents:
  QC test: Update parents
  Description: Parents updated based on moba information
  Rule order: mod1-d
  rule type: samples
  rule action: update
  # Placeholders that the pipeline will fill in
  Rule: Will be the same as the key of this entry

update_sex:
  QC test: Update sex
  Description: Gender updated using to moba information
  Rule order: mod1-e
  rule type: samples
  rule action: update
  # Placeholders that the pipeline will fill in
  Rule: Will be the same as the key of this entry
  Timestamp: 

remove_markers_cluster_sep:
  QC test: Cluster separation
  Description:
  Rule order: mod1-f
  rule type: markers
  rule action: remove
  # Placeholders that the pipeline will fill in
  Rule: Will be the same as the key of this entry
  Timestamp: 

remove_markers_gc_score:
  QC test: GC 10% score
  Description:
  Rule order: mod1-g
  rule type: markers
  rule action: remove
  # Placeholders that the pipeline will fill in
  Rule: Will be the same as the key of this entry
  Timestamp: 

remove_markers_aa_theta_dev:
  QC test: AA Theta Deviation
  Description:
  Rule order: mod1-h
  rule type: markers
  rule action: remove
  # Placeholders that the pipeline will fill in
  Rule: Will be the same as the key of this entry
  Timestamp:

# Not needed. Can be removed when Rotterdam2 is verified. In the meantime, it documents that
# last github checksum for Snakefile containing update_sample_ids was e88e25834a54d084f663f9e4339af7e391d5dfeb
# update_rsids:
#   QC test: Update rsid of markers. After this step, rsIDs can be repeated in the .bim file
#   Description: "See <url to come?> for info. Basically we use the GSA chip mapping, but ignore . and select an rsid were several are listed (creating fewer unique rsIDs). Also, chip ids on the form .1 .2 etc are not mapped. These would typcailly come from allele alternatives on the same rsID."
#   Rule order: mod1-i
#   rule type: markers
#   rule action: update
#   # Placeholders that the pipeline will fill in
#   Rule: Will be the same as the key of this entry
#   Timestamp:



maf_removal_markers: 
  QC test: Low minor allele frequencies of markers temporarily removed
  Description: plink --maf
  Rule order: mod2-a
  rule type: markers
  rule action: remove
  # Placeholders that the pipeline will fill in
  Rule: Will be the same as the key of this entry
  Timestamp: 

missing_genotype_samples:
  QC test: Remove samples due to high missing callrates (plink --mind)
  Description: Input to this is a previously --maf filtered marker set
  Rule order: mod2-b
  rule type: samples
  rule action: remove
  # Placeholders that the pipeline will fill in
  Rule: Will be the same as the key of this entry
  Timestamp: 

clean_samples:
  QC test: Permanently remove samples we don't like
  Description: Input to this is a previously --maf --mind filtered marker set
  Rule order: mod2-b1
  rule type: samples
  rule action: remove
  # Placeholders that the pipeline will fill in
  Rule: Will be the same as the key of this entry
  Timestamp: 
    
missing_genotype_markers:
  QC test: Temporary remove markers due high missing callrates (plink --geno)
  Description: Input is previously --maf and --mind reduced set
  Rule order: mod2-c
  rule type: markers
  rule action: remove
  # Placeholders that the pipeline will fill in
  Rule: Will be the same as the key of this entry
  Timestamp: 

exclude_unplaced_and_non_autosomal_markers:
  QC test: Remove non-autosomal and unplaced markers (plink--autosome)
  Description: Input is previously --maf --mind --geno reduced set
  Rule order: mod2-d
  rule type: markers
  rule action: remove
  # Placeholders that the pipeline will fill in
  Rule: Will be the same as the key of this entry
  Timestamp: 

hardy_weinberg_filtered_markers:
  QC test: Temporary remove markers due to low Hardy-Weinberg equilibrium (plink --hwe)
  Description: Input is previously --maf --mind --geno --autosome reduced set
  Rule order:  mod2-e
  # Describes what item (samples/markers) the rule works on
  rule type: markers
  rule action: remove
  # A couple of placeholders that will be set in the pipe
  Rule: Will become the same as the key of this entry
  Timestamp: 

exclude_strand_ambigious_markers:
  QC test: Temporary remove alleles GC/CG/AT/TA from markers
  Description:
  Rule order: mod2-f
  rule type: markers
  rule action: remove
  # Placeholders that the pipeline will fill in
  Rule: Will be the same as the key of this entry
  Timestamp: 

exclude_high_ld_markers:
  QC test: Temporary remove markers in high LD 
  Description: 
  Rule order: mod2-g
  rule type: markers
  rule action: remove
  # Placeholders that the pipeline will fill in
  Rule: Will be the same as the key of this entry
  Timestamp: 

prune_markers:
  QC test: Temporary prune markers due to  linkage disequilibrium
  Description: Uses plink --make-founders  indep-pairwise 
  Rule order: mod2-h
  rule type: markers
  rule action: remove
  # Placeholders that the pipeline will fill in
  Rule: Will be the same as the key of this entry
  Timestamp: 

pedigree_inconsistence_prep:
  QC test: Prepares for pedigree fix of inconsistent samples
  Description: Plink --sexcheck and --extract --genome
  Rule order: mod2-i
  rule type: markers
  rule action: remove
  # Placeholders that the pipeline will fill in
  Rule: Will be the same as the key of this entry
  Timestamp: 
    
pedigree_fu_detector_solver:
  QC test: Tries to fix triads/missplaced sample
  Description: A R-script inferped_FuckupDetectorAndSolver.R is run and it's result will be used as two new bedset.
    Both will be earlier pruned/full sets, but with a new .fam(ily) file
  Rule order: mod2-j
  rule type: samples
  rule action: update
  # Placeholders that the pipeline will fill in
  Rule: Will be the same as the key of this entry
  Timestamp: 

document_pedigree_fu_detector_solver:
  QC test: Documents changes to bedfiles as a result of the two previous steps
  Description: Just a comparing of samples/individuals changes
  Rule order: mod2-k
  rule type: samples
  rule action: update
  # Placeholders that the pipeline will fill in
  Rule: Will be the same as the key of this entry
  Timestamp:

pedigree_fix_pruned:
  QC test: Removes pedigree-problematic samples form the pruned set based on earlier steps
  Description: Some of these steps have been manual (2019)
  Rule order: mod2-l
  rule type: samples
  rule action: remove
  # Placeholders that the pipeline will fill in
  Rule: Will be the same as the key of this entry
  Timestamp:

common_markers_moba_ref:
  QC test: Find markers common to both Moba and reference set (1000 Genomes)
  Description: Also extract those markers and creates plink bedsets for them. Pruning has allready be done one moba-set, so that pruning will carry over to the reference set
  Rule order: mod2.1a
  rule type: markers
  rule action: remove
  # Placeholders that the pipeline will fill in
  Rule: Will be the same as the key of this entry
  Timestamp: 
    
remove_dup_markers_1kg:
  QC test: Remove duplicte markers in 1000 Genomes
  Description: 
  Rule order: mod2.1b
  rule type: markers
  rule action: remove
  # Placeholders that the pipeline will fill in
  Rule: Will be the same as the key of this entry
  Timestamp: 

pca_1kgp:
  QC test: PCA on reference set 1000 Genomes (without Moba data)
  Description: (flashpca used)
  Rule order: mod2.1c
  rule type: analysis
  rule action: pca/plot
  # Placeholders that the pipeline will fill in
  Rule: Will be the same as the key of this entry
  Timestamp: 

pca_moba:
  QC test: Project moba PCA on reference set 1000 Genomes 
  Description: (flashpca used)
  Rule order: mod2.1d
  rule type: analysis
  rule action: pca/plot
  # Placeholders that the pipeline will fill in
  Rule: Will be the same as the key of this entry
  Timestamp: 

pca_both:
  QC test: Merge Moba and reference data (1000g) and do pca
  Description: (flashpca used)
  Rule order: mod2.1e
  rule type: analysis
  rule action: pca/plot
  # Placeholders that the pipeline will fill in
  Rule: Will be the same as the key of this entry
  Timestamp: 

plot_pca_both:
  QC test: Plot Moba and reference data (1000g). 
  Description: 1000genomes superpopulations used, except for europe where countries are shown. 
  Rule order: mod2.1e
  rule type: analysis
  rule action: pca/plot
  # Placeholders that the pipeline will fill in
  Rule: Will be the same as the key of this entry
  Timestamp: 
    
# plot_pca_moba:
#   QC test: Plot moba and reference data on the same plot
#   Description: 
#   Rule order: mod2.f
#   rule type: analysis
#   rule action: plot
#   # Placeholders that the pipeline will fill in
#   Rule: Will be the same as the key of this entry
#   Timestamp: 

extract_pca_outliers:
  QC test: Exclude csamples where there is too much diversity in pca
  Description: Consider only the two first principal components. 2020.1. Criteria to be improved
  Rule order: mod2.1g
  rule type: samples
  rule action: remove
  # Placeholders that the pipeline will fill in
  Rule: Will be the same as the key of this entry
  Timestamp: 

extract_pca_samples_from_full_markerset:
  QC test: Back to old bedset, all markers, but pca-filtered
  Description: The same samples are removed as in various pca-rules
  Rule order: mod2.1h
  rule type: samples
  rule action: remove
  # Placeholders that the pipeline will fill in
  Rule: Will be the same as the key of this entry
  Timestamp: 
    
split_founder_offspring:
  QC test: Split child/parent
  Description: Two different plink bedsets made 
  Rule order: mod2.2a
  rule type: samples
  rule action: remove (split)
  # Placeholders that the pipeline will fill in
  Rule: Will be the same as the key of this entry
  Timestamp: 
    

ibd_prep:   
  QC test: Prepare for accumulated relateness check
  Description: The Djenghis Khan effect is computed  through R in a isolated/separate step
  Rule order: mod2.2b
  rule type: samples
  rule action: remove
  # Placeholders that the pipeline will fill in
  Rule: Will be the same as the key of this entry
  Timestamp: 

ibd_exclusion:   
  QC test: Remove samples that are too closely related
  Description: Djenghis Khan effect is done through R with handset thresholds
  Rule order: mod2.2c
  rule type: samples
  rule action: remove
  # Placeholders that the pipeline will fill in
  Rule: Will be the same as the key of this entry
  Timestamp: 

ibd_prune:   
  QC test: Remove samples that's straightforward related in addidtion to closely related
  Description: --genome above a pihat threshold in addition to what ibd_exclusion produced
  Rule order: mod2.2d
  rule type: samples
  rule action: remove
  # Placeholders that the pipeline will fill in
  Rule: Will be the same as the key of this entry
  Timestamp: 

geno_rates:   
  QC test: Remove missing genotype rates (samples and markers)
  Description: multiple iterations of  using --geno and --mind 
  Rule order: mod2.2e
  rule type: samples/markers
  rule action: remove
  # Placeholders that the pipeline will fill in
  Rule: Will be the same as the key of this entry
  Timestamp: 

hwe_autos_geno:   
  QC test: hwe + autosomal het + geno
  Description: multiple iterations. creates multiple resultfiles. Two pass of hwe/het + on geno marker
  Rule order: mod2.2f
  rule type: samples/markers
  rule action: remove
  # Placeholders that the pipeline will fill in
  Rule: Will be the same as the key of this entry
  Timestamp: 

sex_check:   
  QC test: Check sample sex (declared vs. genotyped) and remove (miss)matches
  Description: 
  Rule order: mod2.2e
  rule type: samples
  rule action: remove
  # Placeholders that the pipeline will fill in
  Rule: Will be the same as the key of this entry
  Timestamp: 

female_xmarkers:
  QC test: Detect female markers with low hwe, only chr23
  Description: Remove offending markers
  Rule order: mod2.2f
  rule type: markers
  rule action: remove
  # Placeholders that the pipeline will fill in
  Rule: Will be the same as the key of this entry
  Timestamp: 

par_regions:
  QC test: Cleaning par-region for both genders
  Description: Remove offending markers
  Rule order: mod2.2g
  rule type: markers
  rule action: remove
  # Placeholders that the pipeline will fill in
  Rule: Will be the same as the key of this entry
  Timestamp: 

clean_male_x:
  QC test: Getting marker names on all markers with any heterozygous calls
  Description: Remove offending markers
  Rule order: mod2.2h
  rule type: markers
  rule action: document
  # Placeholders that the pipeline will fill in
  Rule: Will be the same as the key of this entry
  Timestamp: 

sex_clean:    
  QC test: Create a plink bedset based on earlier sex-rules
  Description: Aggregation of marker info from sex_check, female_xmarkers, par_regions and clean_male_x. One result for each of founders/offspring
  Rule order: mod2.2i
  rule type: markers
  rule action: remove
  # Placeholders that the pipeline will fill in
  Rule: Will be the same as the key of this entry
  Timestamp: 

common_founders_offspring_markers:    
  QC test: Find good markers common to founders/offspring 
  Description: Earlier tests were split, we want only the markers good in both
  Rule order: mod2.2j
  rule type: markers
  rule action: intersect
  # Placeholders that the pipeline will fill in
  Rule: Will be the same as the key of this entry
  Timestamp: 
    
core_missingness:
  QC test: Start of Core set creation. Missingness 
  Description: Starts with result earlier of split_founder_offspring and will continue tuning after this rule. Also reduces makers to the common good markers found for founders/offspring
  Rule order: mod2.3a
  rule type: samples
  rule action: remove
  # Placeholders that the pipeline will fill in
  Rule: Will be the same as the key of this entry
  Timestamp: 

core_het:
  QC test: sample heterozygosity for the core set 
  Description: Creates plots and logs for both common and rare autosomal markers
  Rule order: mod2.3b
  rule type: samples
  rule action: remove
  # Placeholders that the pipeline will fill in
  Rule: Will be the same as the key of this entry
  Timestamp: 
    
set_mendelian_errors_missing:
  QC test:
  Description:
  Rule order: mod5-b
  rule type: markers
  rule action: remove
  # Placeholders that the pipeline will fill in
  Rule: Will be the same as the key of this entry
  Timestamp: 

hrc_verification_check:
  QC test:
  Description:
  Rule order: mod5-c
  rule type: markers
  rule action: remove
  # Placeholders that the pipeline will fill in
  Rule: Will be the same as the key of this entry
  Timestamp: 

split_by_chr:
  QC test:
  Description:
  Rule order: mod5-d
  rule type: markers
  rule action: remove
  # Placeholders that the pipeline will fill in
  Rule: Will be the same as the key of this entry
  Timestamp: 

prepare_phased_for_imputation:
  QC test:
  Description:
  Rule order: mod5-e
  rule type: markers
  rule action: remove
  # Placeholders that the pipeline will fill in
  Rule: Will be the same as the key of this
  Timestamp: 
