
* QC report for {{ snakemake.config["dataSet"] }}
* Chip used was {{ snakemake.config["chip"] }}

For more info (provided you have access)

* Datasets: {{ snakemake.config["documentationDataset"] }}
* Pipeline: {{ snakemake.config["documentationQC"] }}
* Sourcecode (if you are brave) {{ snakemake.config["githubSource"] }}
  
This report is autogenerated and quite extensively describes every
step (rule) performed by the QC pipeline for {{
snakemake.config["dataSet"] }}. There are a lot of details here, you
can follow the sample/markers through the pipeline: Where were they
updated/removed. Be warned that without good understanding of what a
typicall GWAS pipeline does, you will be swamped in details.

Navigate in the through the left sidebar.

Below this text, the workflow section contains a graph showing what
rules have been run and their interdependence.

There is a mostly useless section for Statistics_ on CPU time spent
as well as when the results were produced.

The Configuration section can be expanded to shows most pipeline
parameters: The QC pipeline is somewhat generic, and can be tweaked by
changing these parameters. The configuration file is also a source for
finding various input-files that have been used to produce the final
results.

Most important is the RESULTS section: There are two kind of results,
recaps and details. Click links to expand that particular section.

====================================  ============================
Recap                                 Details
====================================  ============================
`- Module 1 Data conversion recap`_   `Module 1 Data preparation`_
`- Module 2 Pedigree fix recap`_      `Module 2 Core samples and infere pedigree`_
`- Module 3 Good markers recap`_      `Module 3 Good markers`_
`- Module 4 Core individuals recap`_  `Module 4 Unrelated samples`_
Not produced                          `Module 5 Phasing and imputation preparation`_
====================================  ============================

When a result section has been expanded, the column *Description* can
be used to sort the rules in the order they appear in the
pipleine. The *File* column can be used to see even more details from
the rules. It also contains a recap of what the rules produces - the
content here will be repeated if one rule has several results (see
below)

Most rules have one or more results listed. The most common are

* a *rulename.yaml* that can be clicked and that contains details of
  what the rules does, when it was run etc.
* one or more  plots, if produced by the pipeline

In addition to what is shown the pipeline produced even more
intermediate results, such as plink files for ever rule, and list of
changed/removed sample/markers.

